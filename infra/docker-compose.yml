services:
  app:
    build:
      context: ..
      dockerfile: infra/docker/Dockerfile.app
    ports:
      - "${APP_PORT:-8501}:8501"
    env_file:
      - .env  
    environment:
      # Override with Docker networking
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      # These will be loaded from .env file
      - POSTGRES_DB=${POSTGRES_DB:-interview_coach}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - QDRANT_COLLECTION=${QDRANT_COLLECTION:-interview_chunks}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL:-}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL:-text-embedding-3-small}
      - EMBEDDING_DIM=${EMBEDDING_DIM:-1536}
    depends_on:
      - qdrant
      - postgres
    volumes:
      - ../data:/app/data
      - ../reports:/app/reports
      - ../scripts:/app/scripts  
      - ../app:/app/app 
      
    networks:
      - interview_net
    restart: unless-stopped

  qdrant:
    image: qdrant/qdrant:v1.8.4
    ports:
      - "6333:6333"
    volumes:
      - qdrant_storage:/qdrant/storage
    networks:
      - interview_net

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-interview_coach}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - interview_net

  prometheus:
    image: prom/prometheus:v2.53.0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - interview_net

  grafana:
    image: grafana/grafana:11.0.0
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_INSTALL_PLUGINS=grafana-clock-panel
    volumes:
      # Datasources
      - ./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      # Dashboard provisioning config
      - ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      # Dashboard JSON files
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      # Persistent data
      - grafana_data:/var/lib/grafana
    depends_on:
      - postgres
      - prometheus
    networks:
      - interview_net

networks:
  interview_net:
    driver: bridge

volumes:
  qdrant_storage:
  pgdata:
  grafana_data: